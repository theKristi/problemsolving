(this.webpackJsonpproblemsolving=this.webpackJsonpproblemsolving||[]).push([[0],{25:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(10),bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_1__);function Solution(_ref){var problem=_ref.problem,ExecuteSolution=function ExecuteSolution(problem){var solution=problem.inputs.map((function(e,t){return"let input".concat(t,"=").concat(e,";")})).join("");console.log(solution),solution+="\n"+problem.solution,solution+=problem.init;var answer=eval(solution);return console.log(answer),answer};return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"col-6"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("p",null,"Input: ",problem.inputs),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("p",null,"Output: ",ExecuteSolution(problem)))}__webpack_exports__.a=Solution},30:function(e,t,n){e.exports=n(50)},35:function(e,t,n){},36:function(e,t,n){},38:function(e,t,n){},50:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(11),l=n.n(i),o=(n(35),n(10),n(12)),s=n(13),u=n(17),p=n(14),c=n(9),m=n(18),h=(n(36),function(e){function t(){return Object(o.a)(this,t),Object(u.a)(this,Object(p.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return a.a.createElement("div",{className:"col-md-6 col-sm-12"},a.a.createElement("p",null,this.props.problem.problemStatement),a.a.createElement("pre",null,a.a.createElement("code",{className:"language-javascript"},this.props.problem.solution)))}}]),t}(r.Component)),_=n(25),b=n(26),d=n.n(b),f=n(53),g=n(54);n(38);var E=function(){return a.a.createElement("div",{className:"MyNavbar"},a.a.createElement(f.a,{bg:"dark",variant:"dark",expand:"lg"},a.a.createElement(f.a.Brand,{href:"#home"},"Kristi_the_coder"),a.a.createElement(f.a.Toggle,{"aria-controls":"basic-navbar-nav"}),a.a.createElement(f.a.Collapse,{id:"basic-navbar-nav"},a.a.createElement(g.a,{className:"mr-auto"},a.a.createElement(g.a.Link,{href:"#home"},"About")))))};function x(e){var t=e.displayNextProblem;return e.hasNext?a.a.createElement("div",{className:"col-11"},a.a.createElement("button",{className:"btn btn-primary btn-lg float-right",onClick:t},"Next")):null}function v(e){var t=e.displayPreviousProblem;return e.hasPrev?a.a.createElement("div",{className:"col-11"},a.a.createElement("button",{className:"btn btn-primary btn-lg float-left",onClick:t},"Previous")):null}var P=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(u.a)(this,Object(p.a)(t).call(this,e))).state={problemDisplayed:e.problems[0],problemIndex:0},n.displayProblemAtIndex=n.displayProblemAtIndex.bind(Object(c.a)(n)),n.displayNextProblem=n.displayNextProblem.bind(Object(c.a)(n)),n.displayPreviousProblem=n.displayPreviousProblem.bind(Object(c.a)(n)),n}return Object(m.a)(t,e),Object(s.a)(t,[{key:"displayProblemAtIndex",value:function(e){this.setState({problemDisplayed:this.props.problems[e],problemIndex:e})}},{key:"componentDidUpdate",value:function(){d.a.highlightAll()}},{key:"displayNextProblem",value:function(){var e=this.state.problemIndex+1;this.displayProblemAtIndex(e)}},{key:"displayPreviousProblem",value:function(){var e=this.state.problemIndex-1;this.displayProblemAtIndex(e)}},{key:"render",value:function(){return a.a.createElement("div",{className:"App"},a.a.createElement(E,null),a.a.createElement(h,{problem:this.state.problemDisplayed}),a.a.createElement(_.a,{problem:this.state.problemDisplayed}),a.a.createElement(x,{displayNextProblem:this.displayNextProblem,hasNext:this.state.problemIndex<this.props.problems.length-1}),a.a.createElement(v,{displayPreviousProblem:this.displayPreviousProblem,hasPrev:this.state.problemIndex>0}))}}]),t}(r.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(a.a.createElement(P,{problems:[{problemStatement:'Find maximum consecutive repeating character in string\n     Input : str = "aaaaaabbcbbbbbcbbbb" \n     Output: a',solution:"function findMaxRepeatingChar(input0){\n    let maxChar;\n    let curChar;\n    let lastChar;\n    let maxCount=0;\n    let curCount=0;\n    for(let i=0;i<input0.length;i++){\n        curChar=input0[i]\n        if(!maxChar)\n            maxChar=curChar;\n                \n        if(curChar===lastChar||!lastChar){    \n            curCount++;\n                \n        }\n        else{\n            curCount=0;\n        }   \n        if(curCount>maxCount){\n            maxChar=curChar;\n            maxCount=curCount;\n        }\n                lastChar=curChar;\n    }\n        return maxChar;\n}",inputs:['"aaaaaabbcbbbbbcbbbb"'],output:"a",init:"findMaxRepeatingChar(input0)"},{problemStatement:"Merge two sorted arrays into one sorted array\n        int[] A = {1,5,7,12,18,32}\n        \n        int[] B = {2,4,9,16,27,76,98}",solution:"function mergeArrays(input0, input1){\n            let merged = [];\n            let index1 = 0;\n            let index2 = 0;\n            let current = 0;\n          \n            while (current < (input0.length + input1.length)) {\n          \n              let isInput0Depleted = index1 >= input0.length;\n              let isInput1Depleted = index2 >= input1.length;\n          \n              if (!isInput0Depleted && (isInput1Depleted || (input0[index1] < input1[index2]))) {\n                merged[current] = input0[index1];\n                index1++;\n              } else {\n                merged[current] = input1[index2];\n                index2++;\n              }\n          \n              current++;\n            }\n          \n            return merged.toString();\n        }",inputs:["[1,5,7,12,18,32]","[2,4,9,16,27,76,98]"],init:"mergeArrays(input0, input1)"},{problemStatement:" Segregate 0s on left side and 1s on right side of the array. Traverse array only once.",solution:"function seperateNegPos(input0){\n            let left = 0, right = input0.length-1; \n          \n            while (left < right) \n            { \n                /* Increment left index while we see 0 at left */\n                while (input0[left] > 0 && left < right) \n                    left++; \n          \n                /* Decrement right index while we see 1 at right */\n                while (input0[right] < 1 && left < right) \n                    right--; \n          \n                /* If left is smaller than right then there is a 1 at left \n                  and a 0 at right.  Exchange arr[left] and arr[right]*/\n                if (left < right) \n                { let swap=input0[left]\n                    input0[left] = input0[right]; \n                    input0[right] = swap; \n                    left++; \n                    right--; \n                } \n             \n            }\n            return input0.reverse().toString(); \n        }",inputs:["[4,-3,2,-5,5,-1,3]"],init:"seperateNegPos(input0)"},{problemStatement:" Segregate 0s on left side and 1s on right side of the array. Traverse array only once.",solution:"function seperate10(input0){\n            /* Initialize left and right indexes */\n            let left = 0, right = input0.length-1; \n          \n            while (left < right) \n            { \n                /* Increment left index while we see 0 at left */\n                while (input0[left] == 0 && left < right) \n                    left++; \n          \n                /* Decrement right index while we see 1 at right */\n                while (input0[right] == 1 && left < right) \n                    right--; \n          \n                /* If left is smaller than right then there is a 1 at left \n                  and a 0 at right.  Exchange arr[left] and arr[right]*/\n                if (left < right) \n                { \n                    input0[left] = 0; \n                    input0[right] = 1; \n                    left++; \n                    right--; \n                } \n            }\n            return input0.toString(); \n        }",inputs:["[0,1,0,1,0,0,1,1,1,0]"],init:"seperate10(input0)"}]}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[30,1,2]]]);
//# sourceMappingURL=main.c60bc860.chunk.js.map